//herokuのDBをmysqlにしてやるぞ
//そうしたら①configでDB環境使い分けなくていい②pythonコード書き分けなくていい

1 クレジットカード登録
herokuのページにログインして登録
※herokuはクレジット登録がないとmysql使えない！

2 ClearDBアドオンの追加
heroku上にmysqlのアドオンを追加
> heroku addons:add cleardb

3 configファイル中のDATABASE_URL変更
> heroku config　//するとCLEARDB_DATABASE_URLが追加されてる！
> heroku config:set DATABASE_URL=mysql2://~~~  //上記のやつをDATABASE_URLにも更新
※これだと上手くいかない！Cannot overwrite attachmentと出る.次のように対策
> heroku addons:attach heroku-postgresql -a systemx-pred --as HEROKU_DATABASE
> heroku addons:detach DATABASE -a systemx-pred
> heroku config:set DATABASE_URL=mysql2://~~~
//herokuのaddonを確認すると分かる通り，mysqlがCLEARDB_DATABASE,postgresqlがDATABASEというエイリアス（Attachmentと呼ぶらしい）で管理されている．そこでまずpostgresqlをHEROKU_DATABASEというエイリアスでattachする（関連させる）.その後DATABASEのattachを外す．するとDATABASE_URLはどれとも関連付けられていないのでoverwrite可能になる

user:b5145f4c532cd9
pass:27499f4c
server:us-cdbr-iron-east-05.cleardb.net
db:heroku_761e024be925ffb

4 Gemfile変更
環境ごとにライブラリとそのバージョンを管理してくれるファイル．
gemのSQLの行をdevelopmentとproductionで書き分けていたけど，統一しました

5 database.yml変更
環境ごとにデータベースの種類，権限情報などを登録するファイル．
production用をmysql2に修正

6 bundle installする
→したら一回pushする！

7 データベース作成
普通にdb:migrate,db:seedを実施

8　ブラウザからアクセス
⇒上手くいかず！
Application error
・log確認
→seedまでは上手くいっている模様．
[web.1]syntax error near unexpected token '('
[run.2338]Error R13 (Attach error) ->Failed to attach to process
→Procfileの(1)を消すことにより解決．
// web: bin/rails server -p $PORT -e $RAILS_ENV
//Procfile...アプリ実行時の複数プロセスを管理する．
//ここではrails serverという要求を，webというプロセスで管理．ポートと環境変数を指定．

◎1回デプロイできたがその後うまくいかない！
SQLをたたきすぎてたからclearDBの制約回数に引っかかっていたっぽい
→デプロイの度に自動でdb:seedされていたから回数が増えてしまってた
→しかしseeds.rbをもとにしてるわけではなさそう・・・(入った情報が違う)
→もしかしてローカルのDBがそのまま入るのか？？困る・・・
※mysql監視できるようにMySQL WorkBenchを入れた！

◎デプロイ後，ブラウザからフォーム登録するとテーブルが更新されずに増える？
18日のis_fin = 1にしたいだけなのに，全テーブル（800件）が1気に倍増するのだが！（違うとこで増えてる？）
19日のis_set = 1は普通に機能したっぽい（ただしpythonはもちろん機能せず）
19日のis_fin = 1も普通に機能．なんだったんだ？？
→とりあえず倍増した分削除．それ以降さっきの挙動は出なかったのでとりあえず黙認．．．
mysql-connectorが入りません

→あれ，seed消してデプロイしたら増えなかったよ
mysqlを入れなきゃいけない？？？

◎DBがheroku上に入る機構
・ClearDBのアドオン→herokuからmysqlが操作できるように（herokuの外のサービスなのでURLで操作可能なmysqlが与えられ，heroku経由で操作できるという形）
・DATABASE_URL設定→上記が使えるように(ユーザ名，パスワードなどの情報も入るのでそのまま使える)
・Gemfile→heroku上にもmysql2のライブラリが必要っぽい（コマンドとか呼び出すときにってことかな）
・database.yml→rails側からdbにアクセスするときの認識の仕方をそろえる
・migrate,seed→上記で上手く連携が取れているのでrailsの仕様で指示をすればDB作成できる